#ifndef PROJECT_SETTINGS_H_
#define PROJECT_SETTINGS_H_

#include "mcuid.h"

#define FCPU 500000000

#define UART1_TX_kIOMUXC_SW_MUX_CTL_PAD_GPIO				kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_06
#define UART1_TX_kIOMUXC_SW_PAD_CTL_PAD_GPIO				kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_06
#define UART1_TX_kIOMUXC_SW_MUX_CTL_PAD_GPIO_MUX_MODE 		2
#define UART1_TX_kIOMUXC_SW_PAD_CTL_PAD_GPIO_FIELDS			8

#define UART1_RX_kIOMUXC_SW_MUX_CTL_PAD_GPIO				kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_07
#define UART1_RX_kIOMUXC_SW_PAD_CTL_PAD_GPIO				kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_07
#define UART1_RX_kIOMUXC_SW_MUX_CTL_PAD_GPIO_MUX_MODE 		2
#define UART1_RX_kIOMUXC_SW_PAD_CTL_PAD_GPIO_FIELDS			8

#define UART2_TX_kIOMUXC_SW_MUX_CTL_PAD_GPIO				kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_08
#define UART2_TX_kIOMUXC_SW_PAD_CTL_PAD_GPIO				kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_08
#define UART2_TX_kIOMUXC_SW_MUX_CTL_PAD_GPIO_MUX_MODE 		2
#define UART2_TX_kIOMUXC_SW_PAD_CTL_PAD_GPIO_FIELDS			8

#define UART2_RX_kIOMUXC_SW_MUX_CTL_PAD_GPIO				kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_09
#define UART2_RX_kIOMUXC_SW_PAD_CTL_PAD_GPIO				kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_09
#define UART2_RX_kIOMUXC_SW_MUX_CTL_PAD_GPIO_MUX_MODE 		2
#define UART2_RX_kIOMUXC_SW_PAD_CTL_PAD_GPIO_FIELDS			8

// include the library header
#include "library.h"
// let the system know which lower level modules are in use
// this way higher modules can selectively utilize their resources
#define USE_MODULE_TASK
#define USE_MODULE_SUBSYSTEM
#define USE_MODULE_BUFFER_PRINTF


#define SUBSYSTEM_UART 2

#define RECEIVE_STOP_CHAR '\n' // this is normally \r but the STM32 app uses \n so we can override to match

#define UART1_TX_BUFFER_LENGTH 256
#define NUM_UART1_RECEIVERS 4
#define USE_UART2
#define UART2_TX_BUFFER_LENGTH 256
#define NUM_UART2_RECEIVERS 4

#define TASK_MAX_LENGTH 20

#endif /* PROJECT_SETTINGS_H_ */
